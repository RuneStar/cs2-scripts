// 4818
[proc,ca_tasks_draw_list](int $int0, component $component1, component $component2, component $component3, component $component4, component $component5, component $component6, component $component7, component $component8, component $component9, component $component10, component $component11, component $component12, int $int13)
cc_deleteall($component4);
cc_deleteall($component5);
cc_deleteall($component7);
cc_deleteall($component6);
cc_deleteall($component8);
cc_deleteall($component9);
cc_deleteall($component10);
def_int $int14 = 0;
def_int $length15 = 6;
def_enum $enumarray0($length15);
$enumarray0(0) = enum_3981;
$enumarray0(1) = enum_3982;
$enumarray0(2) = enum_3983;
$enumarray0(3) = enum_3984;
$enumarray0(4) = enum_3985;
$enumarray0(5) = enum_3986;
def_int $colour16 = 0xff981f;
def_int $length17 = ~ca_tasks_total;
def_struct $structarray1($length17);
def_int $int18 = 0;
def_int $length19 = 0;
def_int $int20 = 0;
def_int $int21 = 0;
while ($length19 < $length15) {
	$int21 = enum_getoutputcount($enumarray0($length19));
	while ($int18 < $int21) {
		$structarray1($int20) = enum(int, struct, $enumarray0($length19), $int18);
		$int20, $int18 = calc($int20 + 1), calc($int18 + 1);
	}
	$int18, $length19 = 0, calc($length19 + 1);
}
$int18 = 0;
def_struct $struct22 = null;
def_int $int23 = 0;
def_int $int24 = 40;
def_int $trans25 = 255;
def_graphic $graphic26 = "open_buttons_small,1";
def_graphic $graphic27 = "open_buttons_small,0";
def_int $int28 = -1;
def_int $int29 = -1;
def_string $text0 = "null";
def_string $string1 = "null";
def_int $int30 = -1;
def_int $int31 = -1;
def_int $int32 = -1;
if (cc_find($component2, $int13) = ^true) {
	cc_setcolour($colour16);
}
while ($int18 < $length17) {
	$struct22 = $structarray1($int18);
	$int28 = ~script4834(struct_param($struct22, param_1306));
	$int29 = struct_param($struct22, param_1310);
	$text0 = struct_param($struct22, param_1308);
	$string1 = struct_param($struct22, param_1309);
	$int30 = struct_param($struct22, param_1311);
	$int31 = struct_param($struct22, param_1312);
	if (~ca_task_display($int29, $int28, $int30, $int31) = 1) {
		cc_create($component4, ^iftype_rectangle, $int14);
		if ($int18 = $int0) {
			$int32 = paraheight("Description: <$string1>", calc(if_getwidth($component4) - 10), p11_full);
			cc_setsize(0, calc($int24 + (10 * $int32 + 25)), ^setsize_minus, ^setsize_abs);
			$graphic26 = "open_buttons_small,3";
			$graphic27 = "open_buttons_small,2";
		} else {
			cc_setsize(0, $int24, ^setsize_minus, ^setsize_abs);
			$graphic26 = "open_buttons_small,1";
			$graphic27 = "open_buttons_small,0";
		}
		cc_setposition(0, $int23, ^setpos_abs_centre, ^setpos_abs_top);
		cc_setcolour(^white);
		cc_setfill(true);
		if (calc($int14 % 2) = 1) {
			$trans25 = 230;
		} else {
			$trans25 = 245;
		}
		if ($int18 = $int0 & ~on_mobile = false) {
			cc_settrans(210);
		} else {
			cc_settrans($trans25);
		}
		if (~on_mobile = false) {
			cc_setonmouserepeat("ca_info_hover(event_comsubid, $component4, $component9, 210, $graphic26)");
			cc_setonmouseleave("ca_info_hover(event_comsubid, $component4, $component9, $trans25, $graphic27)");
		} else {
			cc_setonmouserepeat(null);
			cc_setonmouseleave(null);
		}
		cc_setopbase("<col=ff981f><$text0></col>");
		if ($int18 = $int0) {
			cc_setop(1, "Collapse");
			cc_setonop("ca_tasks_draw_list(-1, $component1, $component2, $component3, $component4, $component5, $component7, $component6, $component8, $component9, $component10, $component11, $component12, $int13)");
		} else {
			cc_setop(1, "Expand");
			cc_setonop("ca_tasks_draw_list($int18, $component1, $component2, $component3, $component4, $component5, $component7, $component6, $component8, $component9, $component10, $component11, $component12, $int13)");
		}
		cc_create($component9, ^iftype_graphic, $int14);
		cc_setsize(18, 18, ^setsize_abs, ^setsize_abs);
		cc_setposition(5, calc($int23 + ($int24 - 18) / 2), ^setpos_abs_left, ^setpos_abs_top);
		cc_setgraphic($graphic27);
		cc_create($component10, ^iftype_graphic, $int14);
		cc_setsize(24, 24, ^setsize_abs, ^setsize_abs);
		cc_setposition(28, calc($int23 + ($int24 - 24) / 2), ^setpos_abs_left, ^setpos_abs_top);
		cc_setgraphic(enum(int, graphic, enum_3965, $int29));
		cc_create($component5, ^iftype_text, $int14);
		cc_settext($text0);
		cc_setsize(55, 16, ^setsize_minus, ^setsize_abs);
		cc_setposition(55, calc($int23 + $int24 / 2 - 16), ^setpos_abs_left, ^setpos_abs_top);
		cc_settextfont(p12_full);
		cc_settextalign(^settextalign_left, ^settextalign_centre, 0);
		cc_settextshadow(true);
		if ($int28 = 1) {
			cc_setcolour(0x0dc10d);
		} else {
			cc_setcolour(0x9f9f9f);
		}
		cc_create($component6, ^iftype_text, $int14);
		cc_settext("Monster: <col=ffffff><enum(int, string, enum_3971, $int31)></col>");
		cc_setsize(55, 11, ^setsize_minus, ^setsize_abs);
		cc_setposition(55, calc($int23 + $int24 / 2 + 2), ^setpos_abs_left, ^setpos_abs_top);
		cc_settextfont(p11_full);
		cc_settextalign(^settextalign_left, ^settextalign_centre, 0);
		cc_settextshadow(true);
		cc_setcolour($colour16);
		if ($int18 = $int0) {
			cc_create($component7, ^iftype_text, 0);
			cc_settext("Type: <col=ffffff><enum(int, string, enum_3969, $int30)></col>");
			cc_setsize(55, 11, ^setsize_minus, ^setsize_abs);
			cc_setposition(5, calc($int23 + $int24), ^setpos_abs_left, ^setpos_abs_top);
			cc_settextfont(p11_full);
			cc_settextalign(^settextalign_left, ^settextalign_centre, 0);
			cc_settextshadow(true);
			cc_setcolour($colour16);
			cc_create($component8, ^iftype_text, 0);
			cc_settext("Description: <col=ffffff><$string1></col>");
			cc_setsize(10, calc(10 * $int32), ^setsize_minus, ^setsize_abs);
			cc_setposition(5, calc($int23 + $int24 + 19), ^setpos_abs_left, ^setpos_abs_top);
			cc_settextfont(p11_full);
			cc_settextalign(^settextalign_left, ^settextalign_centre, 0);
			cc_settextshadow(true);
			cc_setcolour($colour16);
		}
		if ($int18 = $int0) {
			$int23 = calc($int23 + $int32 * 10 + $int24 + 25);
		} else {
			$int23 = calc($int23 + $int24);
		}
		$int14 = calc($int14 + 1);
	}
	$int18 = calc($int18 + 1);
}
if ($int14 = 0) {
	if_sethide(false, $component11);
} else {
	if_sethide(true, $component11);
}
~script4862($int23, if_getlayer($component1), $component1, $component3, $component12);
